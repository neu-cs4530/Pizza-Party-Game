import Express from 'express';
import * as http from 'http';
import CORS from 'cors';
import swaggerUi from 'swagger-ui-express';
import { ValidateError } from 'tsoa';
import fs from 'fs/promises';
import { Server as SocketServer } from 'socket.io';
import mongoose from 'mongoose';
import { RegisterRoutes } from '../generated/routes';
import TownsStore from './lib/TownsStore';
import { TownsController } from './town/TownsController';
import { logError } from './Utils';
import CustomerRoutes from './town/database/customer/routes';
import LeaderboardRoutes from './town/database/leaderboard/routes';
import OrderRoutes from './town/database/order/routes';
import PizzaRoutes from './town/database/pizza/routes';
import ToppingRoutes from './town/database/topping/routes';
const app = Express();
app.use(CORS());
const server = http.createServer(app);
const socketServer = new SocketServer(server, {
    cors: { origin: '*' },
});
const CONNECTION_STRING = process.env.CONNECTION_STRING ||
    'mongodb+srv://nagishaca:3iSzoCdfSanOVzIK@pizzapartycluster.k7att2q.mongodb.net/?retryWrites=true&w=majority&appName=PizzaPartyCluster';
if (CONNECTION_STRING === undefined) {
    logError('Unable to connect to MongoDB');
}
else {
    mongoose.connect(CONNECTION_STRING, {
        dbName: 'PizzaPartyGameDatabase',
    });
}
TownsStore.initializeTownsStore((townID) => socketServer.to(townID));
socketServer.on('connection', socket => {
    new TownsController().joinTown(socket);
});
app.use(Express.json());
app.use('/docs', swaggerUi.serve, async (_req, res) => {
    const swaggerSpec = await fs.readFile('../shared/generated/swagger.json', 'utf-8');
    return res.send(swaggerUi.generateHTML(JSON.parse(swaggerSpec)));
});
RegisterRoutes(app);
app.use((err, _req, res, next) => {
    if (err instanceof ValidateError) {
        return res.status(422).json({
            message: 'Validation Failed',
            details: err?.fields,
        });
    }
    if (err instanceof Error) {
        logError(err);
        return res.status(500).json({
            message: 'Internal Server Error',
        });
    }
    return next();
});
CustomerRoutes(app);
LeaderboardRoutes(app);
OrderRoutes(app);
PizzaRoutes(app);
ToppingRoutes(app);
server.listen(process.env.PORT || 8081, () => {
    const address = server.address();
    console.log(`Listening on ${address.port}`);
    if (process.env.DEMO_TOWN_ID) {
        TownsStore.getInstance().createTown(process.env.DEMO_TOWN_ID, false);
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL1NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE9BQU8sTUFBTSxTQUFTLENBQUM7QUFDOUIsT0FBTyxLQUFLLElBQUksTUFBTSxNQUFNLENBQUM7QUFDN0IsT0FBTyxJQUFJLE1BQU0sTUFBTSxDQUFDO0FBRXhCLE9BQU8sU0FBUyxNQUFNLG9CQUFvQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDckMsT0FBTyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzdCLE9BQU8sRUFBRSxNQUFNLElBQUksWUFBWSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ25ELE9BQU8sUUFBUSxNQUFNLFVBQVUsQ0FBQztBQUNoQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxVQUFVLE1BQU0sa0JBQWtCLENBQUM7QUFFMUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDbkMsT0FBTyxjQUFjLE1BQU0saUNBQWlDLENBQUM7QUFDN0QsT0FBTyxpQkFBaUIsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLFdBQVcsTUFBTSw4QkFBOEIsQ0FBQztBQUN2RCxPQUFPLFdBQVcsTUFBTSw4QkFBOEIsQ0FBQztBQUN2RCxPQUFPLGFBQWEsTUFBTSxnQ0FBZ0MsQ0FBQztBQUczRCxNQUFNLEdBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUN0QixHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7QUFDaEIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN0QyxNQUFNLFlBQVksR0FBRyxJQUFJLFlBQVksQ0FBNkMsTUFBTSxFQUFF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